(n*(n + 1)) / 2
(n* (n + 1)) / 2
(n *(n + 1)) / 2
n <- 100
(n*(n + 1)) / 2
n <- 100
(n*(n + 1)) / 2
n <- 1000
n <- 1000
(n*(n + 1)) / 2
n <- 100
(n*(n + 1)) / 2
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^x)
log10(x^10)
log(exp(x))
exp(log(x, base = 2))
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(10^10)
log(exp(10))
exp(log(10, base = 2))
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
murders$abb <- a
murders$abb
murders$abb <- a
class(murders$abb)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
murders$abb <- a
class(a)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
extract[[murders$state]]
[[murders$state]]
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
[[murders$state]]
class(murders$region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
class(murders$region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
class(murders$region)
levels(region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
class(murders$region)
levels(murders$region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
class(murders$region)
levels(murders$region)
length(murders$region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
mat(, 1:3)
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
mat[, 1:3]
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
murders[, 1:3]
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
murders[, 1]
n <- 100
(n*(n + 1)) / 2
n <- 1000
(n*(n + 1)) / 2
n <- 1000
x <- seq(1, n)
sum(x)
log(sqrt(100), base = 10)
log(10^10)
log10(100^10)
log(exp(100))
exp(log(10, base = 2))
library(dslabs)
data(murders)
str(murders)
a <- murders$abb
class(a)
b <- murders$state
a == b
class(murders$region)
levels(murders$region)
length(murders$region)
murders[, 1&3]
save.image("/cloud/project/test.Rmd.RData")
save.image("/cloud/project/test.Rmd.RData")
save.image("/cloud/project/test.nb.html.RData")
save.image("/cloud/project/test.Rmd.RData")
savehistory("/cloud/project/test.Rmd")
savehistory("/cloud/project/test.Rmd.RData")
